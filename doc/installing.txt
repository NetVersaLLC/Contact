1. Create "deploy" user
1a. Add "deploy" user to /etc/sudoers
1b. deployALL=NOPASSWD: ALL
2. As deploy user, install RVM: rvm.io
3. First run the curl command.
4. Then do "rvm requirements" and run the recommended "apt-get".
5. After installing rvm install 1.9.3.
6. Next install NGinx by following the guide here:
   http://wiki.nginx.org/Install
7. run apt-get update then apt-get install nginx.
8. Paste the following into /etc/nginx/conf.d/default.conf:
upstream  contact {
  server   unix:/var/run/thin/contact.0.sock;
  server   unix:/var/run/thin/contact.1.sock;
  server   unix:/var/run/thin/contact.2.sock;
  server   unix:/var/run/thin/contact.3.sock;
  server   unix:/var/run/thin/contact.4.sock;
}

server {
	listen       80;
	server_name  signup.netversa.com;

	root /home/deploy/contact/current/public;

	location / {
		proxy_redirect     off;
		proxy_set_header   Host             $host;
		proxy_set_header   Host             $http_host;
		proxy_set_header   X-Real-IP        $remote_addr;
		proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
		if (-f $request_filename/index.html) {
			rewrite (.*) $1/index.html break;
		}
		if (-f $request_filename.html) {
			rewrite (.*) $1.html break;
		}
		if (!-f $request_filename) {
			proxy_pass http://contact;
			break;
		}
	}
}
9. Now switch to deploy and gem install thin --no-ri --no-rdoc.
10. Now install thin: rvmsudo thin install
11. Generate ssh keys: ssh-keygen -t rsa -b 4096
12. Add ssh key to Github as deploy key
13. Add dev machine user's id_rsa.pub to deploy user's
~/.ssh/authorized_keys
14. Install mysql: sudo apt-get install mysql-client mysql-server
libmysqlclient-dev
15. CREATE DATABASE contact;
16. GRANT ALL PRIVILEGES ON contact.* TO 'contact'@'localhost'
IDENTIFIED BY '2LCuNQ2nAq';
17. Install therubyracer gem: gem install therubyracer --no-ri --no-rdoc
18. Install node: git clone https://github.com/joyent/node.gita
19. cd node
20. git tags # Get most recent
21. git checkout vX.X.X
22. apt-get install python
23. ./configure --openssl-libpath=/usr/lib/ssl && make
24. sudo make install
25. clone repo: git clone git@github.com:jjeffus/Contact.git
26. run bundle install in repo. Fix dependencies.
27. Add dev machine user's id_rsa.pub to deploy user's
~/.ssh/authorized_keys
28. mkdir -p contact/shared/log; mkdir -p contact/shared/pids
29. cd /home/deploy/contact/current && rvmsudo thin config -C
/etc/thin/contact.yml --environment production--socket
/var/run/sock/thin.sock
30. Add init script:
#!/bin/sh
### BEGIN INIT INFO
# Provides:          thin
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      S 0 1 6
# Short-Description: thin initscript
# Description:       thin
### END INIT INFO

# Original author: Forrest Robertson

# Do NOT "set -e"

# DAEMON=/home/deploy/.rvm/gems/ruby-1.9.2-p290/bin/thin
DAEMON=thin
SCRIPT_NAME=/etc/init.d/thin
CONFIG_PATH=/etc/thin
DEPLOF=/home/deploy/contact/current
USER=deploy

# Exit if the package is not installed

export RAILS_ENV=production
case "$1" in
  start)
su - $USER -c "cd $DEPLOF && bundle exec $DAEMONMON start --all
$CONFIG_PATH"
;;
  stop)
su - $USER -c "$DAEMON stop     --all $CONFIG_PATH"
;;
  restart)
su - $USER -c "$DAEMON stop --all $stopCONFIG_PATH"
su - $USER -c "cd $DEPLOF && bundle exec $DAEMON start --startall
$CONFIG_PATH"
;;
  *)
echo "Usage: $SCRIPT_NAME {start|stop|restart}" >&2
exit 3
;;
esac
29. Run cap deploy on dev machine.
