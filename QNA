Q.) Is there a universal browser variable such as $browser ?

It's better to create your own browser as needed and pass it as a variable to methods. Be sure to do your best to close the browser at the end of the script. The contact_job.rb tries to close them but it helps if we can cooperate.

Q.) What's the default template for the data hash or business hash ?

There is no default template, anything goes. The data hash is generated by eval()ing the value stored in the data_generator field of the job/payload. It can be a data structure like:

{ 'email' => 'test@testing.com' }

Or it could be some section of code:

data = Hash.new
data['email'] = Model.make_new_email
data

But preferably it is a single method on the model related to the payload. For example, if the payload is for signing up to Yelp then an appropriate value would be:

Yelp.make_data_for_signup

Q.) Will the data hash be a global variable, or handed in as a paramenter to each script function ?

This is a normal variable which is automatically in the context of the script being executed.

Q.) When the client pulls the current script in queue, does it pull each of the requires within the executable script ?

For these scripts "require" does not work since the client is natively compiled using exerb for Windows.

Q.) For captcha testing do I need to have a sample system running with an authenticated account, or can I use one of
/Citation/lib/captcha.rb or /Contact/bin/post_captcha or /Contact/bin/captchasniper_post directly ?

Captcha solving can be done using Citation/lib/captcha.rb.

Q.) For passwords, will the business data hash have a pointer to retrieve this for an encrypted source ?

You can save passwords using self.save_account(Model, {:keys => :to_save}).

Q.) Will each website have a unique password, or will the business acount do the taboo and share the same password variable over many sites?

When filling out the form you should generate the password AND save it in the model before you sign up to the site.
